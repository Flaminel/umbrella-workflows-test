on:
  workflow_call:
    inputs:
      githubContext: # github context in JSON format
        required: true
        type: string
      chartRepo:
        required: true
        type: string
      chartName:
        required: true
        type: string
      version:
        required: true
        type: string
      valuesPath:
        required: false
        type: string
        default: chart/values-external.yaml

jobs:
  install_chart:
    runs-on: ubuntu-latest
    steps:
      -
        name: Initialize chart info
        timeout-minutes: 1
        run: |
          githubRef=${{ fromJSON(inputs.githubContext).head_ref }}
          branch=${githubRef##*/}
          githubRepositoryName=$(basename ${{ fromJSON(inputs.githubContext).repository }})

          echo "branch=$branch" >> $GITHUB_ENV
          echo 'githubRepository=${{ fromJSON(inputs.githubContext).repository }}' >> $GITHUB_ENV
          echo "githubRepositoryName=$githubRepositoryName" >> $GITHUB_ENV
      -
        name: Checkout target repository
        uses: actions/checkout@v4
        timeout-minutes: 1
        with:
          repository: ${{ env.githubRepository }}
          ref: ${{ env.branch }}
          token: ${{ secrets.REPO_READONLY_PAT }}
      - 
        name: Install helm
        timeout-minutes: 2
        run: |
          sudo snap install helm --classic
      - 
        name: Create kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@v1.2
        timeout-minutes: 1
        with:
          fileName: './kubeconfig'
          encodedString: ${{ secrets.KUBECONFIG }}
      -
        name: Upgrade chart
        timeout-minutes: 5
        env:
          KUBECONFIG: ${{ steps.kubeconfig.outputs.filePath }}
        run: |
          helm repo add chart ${{ inputs.chartRepo }}
          helm repo update
          helm upgrade ${{ env.githubRepositoryName }} chart/${{ inputs.chartName }} \
          --kubeconfig $KUBECONFIG \
          --install \
          --namespace ${{ env.githubRepositoryName }} \
          --create-namespace \
          --version=${{ inputs.version }} \
          --values=${{ inputs.valuesPath }} \
          --debug