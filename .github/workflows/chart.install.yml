name: Chart install

on:
  workflow_call:
    inputs:
      githubContext: # github context in JSON format
        required: true
        type: string
    secrets:
      PAT:
        required: true
      KUBECONFIG:
        required: true
      SECRETS_TOKEN:
        required: true

jobs:
  install_chart:
    name: Install chart
    runs-on: ubuntu-latest
    steps:
      -
        name: Initialize chart info
        timeout-minutes: 1
        run: |
          # TODO delete branch
          githubRef=${{ fromJSON(inputs.githubContext).head_ref }}
          branch=${githubRef##*/}
          githubRepositoryName=$(basename ${{ fromJSON(inputs.githubContext).repository }})

          echo "branch=$branch" >> $GITHUB_ENV
          echo 'githubRepository=${{ fromJSON(inputs.githubContext).repository }}' >> $GITHUB_ENV
          echo "githubRepositoryName=$githubRepositoryName" >> $GITHUB_ENV
          echo 'githubSha=${{ fromJSON(inputs.githubContext).sha }}' >> $GITHUB_ENV
          echo 'workspace=${{ github.workspace }}' >> $GITHUB_ENV


      - 
        name: Get secrets
        id: customSecrets
        uses: flaminel/secrets-action@v1
        with:
          access-token: ${{ secrets.SECRETS_TOKEN }}
          secrets-names: '{ "names": ["EncryptionKey", "EncryptionIV"] }'
      - 
        name: Set secrets
        run: |
          echo -e "1"
          echo -e $EncryptionKey
          echo -e "2"
          echo -e '${{ env.EncryptionKey }}'
      -
        name: Checkout target repository
        uses: actions/checkout@v3
        timeout-minutes: 1
        with:
          repository: ${{ env.githubRepository }}
          ref: ${{ env.branch }}
          token: ${{ secrets.PAT }}
      - 
        name: Replace secrets
        working-directory: chart
        timeout-minutes: 1
        run: |
          originalfile="values.yaml"
          tmpfile=$(mktemp)
          cp --attributes-only --preserve $originalfile $tmpfile
          cat $originalfile | envsubst > $tmpfile && mv $tmpfile $originalfile
      - 
        name: Install helm
        timeout-minutes: 2
        run: |
          sudo snap install helm --classic
      -
        name: Install chart
        working-directory: chart
        timeout-minutes: 5
        run: |
          touch kubeconfig
          echo '${{ secrets.KUBECONFIG }}' >> kubeconfig
          export KUBECONFIG=./kubeconfig

          helm repo add chartmuseum https://charts.pricegrabber.xyz
          helm repo update

          helm upgrade ${{ env.githubRepositoryName }} chartmuseum/universal-chart \
          --install \
          --namespace ${{ env.githubRepositoryName }} \
          --create-namespace \
          --wait \
          --version=1.0.0 \
          --values=./values.yaml \
          --debug

      # TODO future
      # - 
      #   name: Install chart
      #   uses: vimeda/helm@v1.6.8
      #   with:
      #     release: ${{ env.githubRepositoryName }}
      #     namespace: production
      #     version: ${{ env.githubSha }}
      #     value-files: ${{ env.workspace }}/chart/values.yaml
      #     chart: chartmuseum/universal-chart
      #     chart-version: 1.0.0
      #     repo: https://charts.pricegrabber.xyz
      #     repo-alias: chartmuseum
      #   env:
      #     KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'